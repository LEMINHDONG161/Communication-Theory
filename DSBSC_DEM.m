% DSBSC_DEM.m% Matlab program example for DSBSC-AM demodulation % The message signal is triangular pulse with pulse width tau2=0.1clearecho ondf=0.3;             % desired frequency resolution [Hz]ts=1/1500;        % sampling interval [sec]fs=1/ts;           % sampling frequencyfc=250;            % carrier frequencyT1=-0.1; T2=0.1;    % observation time interval (from T1 to T2 sec)t=[T1:ts:T2];    % observation time vector% -----------------------------------------------% modulation : DSB-SC% -----------------------------------------------tau2=0.1; % Pulse width [sec]x=triangle(tau2, T1, T2, fs, df); % message signal%x=rect(tau2, T1, T2, fs, df); % message signalxc=cos(2*pi*fc.*t);               % carrier signalxm=x.*xc;                           % mixing (xm is modulated signal)[X,x,df1]=fft_mod(x,ts,df);        % Fourier transform of message signalX=X/fs;                               % scaling                 [Xm,xm,df1]=fft_mod(xm,ts,df);  % Fourier transform of modulated signalXm=Xm/fs;                            % scaling[XC,xc,df1]=fft_mod(xc,ts,df);    % Fourier transform of carrierclff=[0:df1:df1*(length(xm)-1)]-fs/2;   %frequency vector (range to plot)subplot(2,1,1)plot(t,x(1:length(t)))%xlabel('Time')title('Message signal')subplot(2,1,2)plot(t,xm(1:length(t)))xlabel('Time')title('Modulated signal')pause   % Press any key to see the spectra subplot(2,1,1)plot(f,abs(fftshift(X)))%xlabel('Frequency')title('Spectrum of the message signal')subplot(2,1,2)plot(f,abs(fftshift(Xm)))title('Spectrum of the modulated signal')xlabel('Frequency')% ----------------------------------------------% AWGN noise channel% ----------------------------------------------%signal_power=norm(xm(1:N))^2/N;     	% power in modulated signal%noise_power=signal_power/snr_lin;    	% compute noise power%noise_std=sqrt(noise_power);         	% compute noise standard deviation%noise=noise_std*randn(1,length(xm));  	% generate noise%r=xm+noise;                           	% add noise to the modulated signalr=xm;   % received signal (r=rx for distortionless channel)[R,r,df1]=fft_mod(r,ts,df);           	% spectrum of the received signalR=R/fs;                              	% scaling% -----------------------------------------------% demodulation : coherent detection% We use ideal lowpass filter in this example.% -----------------------------------------------y=r.*xc;		                  % mixing[Y,y,df1]=fft_mod(y,ts,df);   % Fourier transform of mixer outputY=Y/fs;                           % scalingf_cutoff=150;                        	% cutoff frequency of the filtern_cutoff=floor(f_cutoff/df1);       % design the filterH=zeros(size(f));                    H(1:n_cutoff)=2*ones(1,n_cutoff);  % freq. response of the lowpass filterH(length(f)-n_cutoff+1:length(f))=2*ones(1,n_cutoff); % note that the filter is periodicZ=H.*Y;			       % spectrum of the filter outputz=real(ifft(Z))*fs;    % filter output waveformpause % Press a key to see the effect of mixingclfsubplot(3,1,1)plot(f,fftshift(abs(X)))title('Spectrum of the the Message Signal')%xlabel('Frequency')subplot(3,1,2)plot(f,fftshift(abs(R)))title('Spectrum of the Received Signal')%xlabel('Frequency')subplot(3,1,3)plot(f,fftshift(abs(Y)))title('Spectrum of the Mixer Output')xlabel('Frequency')pause % Press a key to see the effect of filtering on the mixer outputclfsubplot(3,1,1)plot(f,fftshift(abs(Y)))title('Spectrum of the Mixer Output')%xlabel('Frequency')subplot(3,1,2)plot(f,fftshift(abs(H)))title('Lowpass Filter Characteristics')%xlabel('Frequency')subplot(3,1,3)plot(f,fftshift(abs(Z)))title('Spectrum of the Demodulator output')xlabel('Frequency')pause % Press a key to compare the spectra of the message an the received signalclfsubplot(2,1,1)plot(f,fftshift(abs(X)))title('Spectrum of the Message Signal')%xlabel('Frequency')subplot(2,1,2)plot(f,fftshift(abs(Z)))title('Spectrum of the Demodulator Output')xlabel('Frequency')pause % Press a key to see the message and the demodulator output signalssubplot(2,1,1)plot(t,x(1:length(t)))title('The Message Signal')%xlabel('Time')subplot(2,1,2)plot(t,z(1:length(t)))title('The Demodulator Output')xlabel('Time')